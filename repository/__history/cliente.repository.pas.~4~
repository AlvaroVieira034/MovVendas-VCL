unit cliente.repository;

interface

uses icliente.repository, cliente.model, conexao.service, System.SysUtils, FireDAC.Comp.Client, FireDAC.Stan.Param,
     Data.DB;

type
  TClienteRepository = class(TInterfacedObject, IClienteRepository)
  private
    TblClientes: TFDQuery;
    QryClientes: TFDQuery;
    QryTemp: TFDQuery;
    DsClientes: TDataSource;
    Transacao: TFDTransaction;
  public
    constructor Create;
    destructor Destroy; override;
    function Inserir(FCliente: TCliente; out sErro: string): Boolean;
    function Alterar(FCliente: TCliente; ACodigo: Integer; out sErro: string): Boolean;
    function Excluir(ACodigo: Integer; out sErro: string): Boolean;

  end;

implementation

{ TProdutoRepository }

constructor TClienteRepository.Create;
begin

end;

destructor TClienteRepository.Destroy;
begin

  inherited;
end;

function TClienteRepository.Inserir(FCliente: TCliente; out sErro: string): Boolean;
begin

end;

function TClienteRepository.Alterar(FCliente: TCliente; ACodigo: Integer; out sErro: string): Boolean;
begin

end;

function TClienteRepository.Excluir(ACodigo: Integer; out sErro: string): Boolean;
begin

end;


end.
